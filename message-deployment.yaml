apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-service
  namespace: message
spec:
  replicas: 1
  selector:
    matchLabels:
      app: message-service
  template:
    metadata:
      labels:
        app: message-service
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8011'
        prometheus.io/path: '/actuator/prometheus'
    spec:
      containers:
        - name: message-service
          image: msj9965/alog-message:main # CI/CD 파이프라인에서 업데이트될 이미지
          ports:
            - containerPort: 8011
          # envFrom 대신 env를 사용하여 각 환경 변수를 명시적으로 주입합니다.
          env:
#            - name: SPRING_PROFILES_ACTIVE
#              value: cloud

            # --- ConfigMap (message-service-config)에서 가져올 값들 ---
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: message-service-config
                  key: KAFKA_BOOTSTRAP_SERVERS
            - name: USER_SERVICE_URL # <<< 중요: 애플리케이션이 필요로 하는 값
              valueFrom:
                configMapKeyRef:
                  name: message-service-config
                  key: USER_SERVICE_URL
            - name: AWS_S3_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: message-service-config
                  key: AWS_S3_BUCKET
            - name: AWS_S3_REGION
              valueFrom:
                configMapKeyRef:
                  name: message-service-config
                  key: AWS_S3_REGION
            - name: KAFKA_TOPIC_NOTIFICATION
              valueFrom:
                configMapKeyRef:
                  name: message-service-config
                  key: KAFKA_TOPIC_NOTIFICATION

            # --- Secret (message-service-secret)에서 가져올 값들 ---
            - name: CLOUD_DB_URL
              valueFrom:
                secretKeyRef:
                  name: message-service-secret
                  key: CLOUD_DB_URL
            - name: CLOUD_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: message-service-secret
                  key: CLOUD_DB_USERNAME
            - name: CLOUD_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: message-service-secret
                  key: CLOUD_DB_PASSWORD
            - name: AWS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: message-service-secret
                  key: AWS_ACCESS_KEY
            - name: AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: message-service-secret
                  key: AWS_SECRET_KEY
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: message-service-secret
                  key: JWT_SECRET

          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8011
            initialDelaySeconds: 30
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8011
            initialDelaySeconds: 60
            periodSeconds: 15
