apiVersion: apps/v1
kind: Deployment
metadata:
  name: message-service-deployment
  namespace: message
  labels:
    app: message-service
spec:
  replicas: 2 # Pod를 2개 실행하여 가용성 확보
  selector:
    matchLabels:
      app: message-service
  template:
    metadata:
      labels:
        app: message-service
      # Prometheus가 메트릭을 수집할 수 있도록 어노테이션 추가
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8011'
        prometheus.io/path: '/actuator/prometheus'
    spec:
      containers:
        - name: message-service
          # 중요! 실제 빌드한 Docker 이미지 주소로 변경해주세요.
          image: msj9965/alog-message:main
          ports:
            - containerPort: 8011 # application.yml에 설정된 서버 포트
          envFrom:
            # 위에서 정의한 ConfigMap과 Secret의 모든 데이터를 환경변수로 주입
            - configMapRef:
                name: message-service-config
            - secretRef:
                name: message-service-secret
          # Pod의 상태를 주기적으로 확인하여 자동 복구 및 안정적인 서비스 보장
          readinessProbe: # Pod가 트래픽을 받을 준비가 되었는지 확인
            httpGet:
              path: /actuator/health/readiness
              port: 8011
            initialDelaySeconds: 30 # 컨테이너 시작 후 30초 뒤에 첫 확인
            periodSeconds: 10 # 10초마다 확인
          livenessProbe: # Pod가 살아있는지(정상 동작하는지) 확인
            httpGet:
              path: /actuator/health/liveness
              port: 8011
            initialDelaySeconds: 60 # 컨테이너 시작 후 60초 뒤에 첫 확인
            periodSeconds: 15 # 15초마다 확인